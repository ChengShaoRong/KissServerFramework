//All line string prefix with '//' will be remove, just as annotation in ridl file.
//All the '\t' will be replace as space and the multiple spaces will be trim as A space, that effect the annotation.
//Don't use '_fields_' or '_attribute_' or 'waitingUpdate' or 'UpdateMask' as variable name.
//JSON config, must start with '{' and end with '}'
{
    "version":1,                                         //RIDL version
    "IAsyncUpdateDB":true,                               //This class whether inherit IAsyncUpdateDB.
    "InsertDB":true,                                     //Insert data into database.
    "SelectDB":["","uid","uid,acctType","name,acctType"] //Select data from database. "" mean add function 'SelectAll(Action<List<SerialNumber>, string> callback)'. "sn" mean add function 'SelectBySn(string sn,Action<List<SerialNumber>, string> callback)'. "sn#snType" mean add function 'SelectBySnAndSnType(string sn, int snType, Action<List<SerialNumber>, string> callback)'.
}

//Annotation
/*
 *           C#Like
 * Copyright © 2022 RongRong
 * It's automatic generate by Account.ridl, don't modify this file.
 */
//Using
using KissFramework;
using System;

//Object class
namespace KissServerFramework
{
    class Account                //Will generate Account.cs and AccountBase.cs two files.
    {
        //Base infomation won't be change
        baseInfo                        //mask name
        {
            int uid{"primary":true,"AUTO_INCREMENT":true};                      //one of the property type and name with mask 'baseInfo'
            int acctType;                                                       //one of the property type and name with mask 'baseInfo'
            DateTime createTime{"dbType":"Timestamp","dontUpdate":true};        //one of the property type and name with mask 'baseInfo'
        };
        loginInfo                       //mask name
        {
            string name{"dbType":"VarChar, 64"};                //property type and name with mask 'loginInfo'
            string password{"dbType":"VarChar, 64"};            //property type and name with mask 'loginInfo'
        };
        nickname
        {
            string nickname{"dbType":"VarChar, 64"};            //for show
        };
        money
        {
            int money;
        };
        score
        {
            int score;                  //score value
            DateTime scoreTime;              //score change time, for ranking sort with same score
        };
    }
}
